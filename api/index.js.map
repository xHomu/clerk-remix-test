{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/dist/compiler/shims/react.ts", "../app/entry.server.tsx", "../app/root.tsx", "../app/components/Header.tsx", "../app/routes/ssr-user-demo.tsx", "../app/routes/sign-in/$.tsx", "../app/routes/sign-up/$.tsx", "../app/routes/ssr-demo.tsx", "../app/routes/user/$.tsx", "../app/routes/index.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import { renderToString } from \"react-dom/server\";\nimport type { EntryContext } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  const markup = renderToString(<RemixServer context={remixContext} url={request.url} />);\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import type { LoaderFunction, MetaFunction } from \"@remix-run/node\";\nimport { Links, LiveReload, Meta, Outlet, Scripts, ScrollRestoration } from \"@remix-run/react\";\nimport { rootAuthLoader } from \"@clerk/remix/ssr.server\";\nimport { ClerkApp, ClerkCatchBoundary } from \"@clerk/remix\";\nimport styles from \"~/styles/shared.css\";\nimport Header from \"~/components/Header\";\n\nexport const meta: MetaFunction = () => {\n  return { title: \"New Remix App\" };\n};\n\nexport function links() {\n  return [\n    { rel: \"stylesheet\", href: \"https://unpkg.com/modern-css-reset@1.4.0/dist/reset.min.css\" },\n    { rel: \"stylesheet\", href: styles },\n  ];\n}\n\nexport const loader: LoaderFunction = (args) => {\n  return rootAuthLoader(\n    args,\n    ({ request }) => {\n      const { userId, sessionId, getToken } = request.auth;\n      console.log(\"Root loader auth:\", { userId, sessionId, getToken });\n      return { message: `Hello from the root loader :)` };\n    },\n    { loadUser: true }\n  );\n};\n\nfunction App() {\n  return (\n    <html lang=\"en\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <Header />\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n\nexport default ClerkApp(App);\n\nexport const CatchBoundary = ClerkCatchBoundary();\n", "import { SignedIn, SignedOut, UserButton } from \"@clerk/remix\";\nimport { Link } from \"@remix-run/react\";\n\n// Header component using <SignedIn> & <SignedOut>.\n//\n// The SignedIn and SignedOut components are used to control rendering depending\n// on whether or not a visitor is signed in.\n//\n// https://docs.clerk.dev/frontend/react/signedin-and-signedout\nconst Header = () => (\n  <header className=\"header\">\n    <div className=\"left\">\n      <Link to=\"/\" className=\"logo\">\n        <img src=\"/logo.svg\" width=\"32\" height=\"32\" alt=\"Logo\" />\n        <span className=\"appName\">Your application</span>\n      </Link>\n    </div>\n    <div className=\"right\">\n      <SignedOut>\n        <Link to=\"/sign-in\">Sign in</Link>\n      </SignedOut>\n      <SignedIn>\n        <UserButton userProfileUrl=\"/user\" afterSignOutUrl=\"/\" />\n      </SignedIn>\n    </div>\n  </header>\n);\n\nexport default Header;\n", "import type { LoaderFunction } from \"@remix-run/node\";\nimport { redirect } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\n\nimport { getAuth } from \"@clerk/remix/ssr.server\";\nimport { users } from \"@clerk/remix/api.server\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const { userId } = await getAuth(request);\n\n  if (!userId) {\n    return redirect(\"/sign-in?redirect_url=\" + request.url);\n  }\n\n  const user = await users.getUser(userId);\n  return { serialisedUser: JSON.stringify(user) };\n};\n\nexport default function SsrDemoPage() {\n  const { serialisedUser } = useLoaderData();\n\n  return (\n    <div className=\"container\">\n      <main className=\"main\">\n        <h1 className=\"title\">SSR Demo page with /api.server</h1>\n        <p className=\"description\">This route has a loader that fetches the user on the server-side.</p>\n        <p className=\"description\">\n          If you only intend to use the `user` object on the client-side, you most probably want to simply use the\n          `useUser` hook instead.\n        </p>\n\n        <div className=\"preContainer\">\n          <h2>useLoaderData hook</h2>\n          <p className=\"description\">\n            The loader uses getAuth to get the userId and users.getUser to fetch the user object\n          </p>\n          <pre>{JSON.stringify({ serialisedUser }, null, 2)}</pre>\n        </div>\n      </main>\n    </div>\n  );\n}\n", "import { SignIn } from \"@clerk/remix\";\n\nexport default function SignInPage() {\n  return (\n    <div className=\"container\">\n      <SignIn path=\"/sign-in\" routing=\"path\" signUpUrl=\"/sign-up\" />\n    </div>\n  );\n}\n", "import { SignUp } from \"@clerk/remix\";\n\nexport default function SignUpPage() {\n  return (\n    <div className=\"container\">\n      <SignUp path=\"/sign-up\" routing=\"path\" signInUrl=\"/sign-in\" />\n    </div>\n  );\n}\n", "import { redirect } from \"@remix-run/node\";\nimport type { LoaderFunction } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport { useUser } from \"@clerk/remix\";\nimport { getAuth } from \"@clerk/remix/ssr.server\";\n\nconst mockGetPosts = (userId: string) => {\n  return Promise.resolve([{ title: \"A Post\", content: \"Hello from Clerk + Remix\" }]);\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const { userId, sessionId, getToken } = await getAuth(request);\n  console.log(\"Use getAuth() to access the auth state:\", userId, sessionId, getToken);\n\n  if (!userId) {\n    return redirect(\"/sign-in?redirect_url=\" + request.url);\n  }\n\n  const posts = await mockGetPosts(userId);\n  return { posts };\n};\n\nexport default function SsrDemoPage() {\n  const { isSignedIn, isLoaded, user } = useUser();\n  const { posts } = useLoaderData();\n\n  return (\n    <div className=\"container\">\n      <main className=\"main\">\n        <h1 className=\"title\">SSR Demo page</h1>\n        <p className=\"description\">\n          This page and any displayed data are fully rendered on the server side. Reload this page to try it out.\n        </p>\n\n        <div className=\"preContainer\">\n          <h2>useLoaderData hook</h2>\n          <p className=\"description\">\n            The loader uses getAuth to get the userId and fetch the posts from a remote database\n          </p>\n          <pre>{JSON.stringify({ posts }, null, 2)}</pre>\n        </div>\n\n        <div className=\"preContainer\">\n          <h2>useUser hook</h2>\n          <p className=\"description\">\n            Passing {`{ loadUser: true }`} to the root loader makes all Clerk data available both during SSR and CSR\n          </p>\n          <pre>{JSON.stringify({ isLoaded })}</pre>\n          <pre>{JSON.stringify({ isSignedIn })}</pre>\n          <pre>{JSON.stringify({ user }, null, 2)}</pre>\n        </div>\n      </main>\n    </div>\n  );\n}\n", "import { UserProfile } from \"@clerk/remix\";\n\nexport default function UserProfilePage() {\n  return <UserProfile path=\"/user\" routing=\"path\" />;\n}\n", "import { SignedIn, SignedOut } from \"@clerk/remix\";\nimport { Link } from \"@remix-run/react\";\n\nconst ClerkFeatures = () => (\n  <Link to=\"/user\" className=\"cardContent\">\n    <img src=\"/icons/layout.svg\" />\n    <div>\n      <h3>Explore features provided by Clerk</h3>\n      <p>Interact with the user button, user profile, and more to preview what your users will see</p>\n    </div>\n    <div className=\"arrow\">\n      <img src=\"/icons/arrow-right.svg\" />\n    </div>\n  </Link>\n);\n\nconst SsrDemoLink = () => (\n  <Link to=\"/ssr-demo\" className=\"cardContent\">\n    <img src=\"/icons/layout.svg\" />\n    <div>\n      <h3>Visit the SSR demo page</h3>\n      <p>\n        See how Clerk hydrates the auth state during SSR and CSR, enabling server-side generation even for\n        authenticated pages\n      </p>\n    </div>\n    <div className=\"arrow\">\n      <img src=\"/icons/arrow-right.svg\" />\n    </div>\n  </Link>\n);\n\nconst SignupLink = () => (\n  <Link to=\"/sign-up\" className=\"cardContent\">\n    <img src=\"/icons/user-plus.svg\" />\n    <div>\n      <h3>Sign up for an account</h3>\n      <p>Sign up and sign in to explore all the features provided by Clerk out-of-the-box</p>\n    </div>\n    <div className=\"arrow\">\n      <img src=\"/icons/arrow-right.svg\" />\n    </div>\n  </Link>\n);\n\n// Main component using <SignedIn> and <SignedOut>\n//\n// The SignedIn and SignedOut components are used to control rendering depending\n// on whether or not a visitor is signed in.\n//\n// https://docs.clerk.dev/frontend/react/signedin-and-signedout\nconst Main = () => (\n  <main className=\"main\">\n    <h1 className=\"title\">Welcome to your new app</h1>\n    <SignedIn>\n      <p className=\"description\">You have successfully signed in</p>\n    </SignedIn>\n    <SignedOut>\n      <p className=\"description\">Sign up for an account to get started</p>\n    </SignedOut>\n\n    <div className=\"cards\">\n      <SignedIn>\n        <div className=\"card\">\n          <ClerkFeatures />\n        </div>\n      </SignedIn>\n      <SignedIn>\n        <div className=\"card\">\n          <SsrDemoLink />\n        </div>\n      </SignedIn>\n      <SignedOut>\n        <div className=\"card\">\n          <SignupLink />\n        </div>\n      </SignedOut>\n      <div className=\"card\">\n        <a href=\"https://dashboard.clerk.dev/last-active?utm_source=github&utm_medium=starter_repos&utm_campaign=remix_starter\" target=\"_blank\" rel=\"noreferrer\" className=\"cardContent\">\n          <img src=\"/icons/settings.svg\" />\n          <div>\n            <h3>Configure settings for your app</h3>\n            <p>Visit Clerk to manage instances and configure settings for user management, theme, and more</p>\n          </div>\n          <div className=\"arrow\">\n            <img src=\"/icons/arrow-right.svg\" />\n          </div>\n        </a>\n      </div>\n    </div>\n\n    <div className=\"links\">\n      <a href=\"https://clerk.dev/docs?utm_source=github&utm_medium=starter_repos&utm_campaign=remix_starter\" target=\"_blank\" rel=\"noreferrer\" className=\"link\">\n        <span className=\"linkText\">Read Clerk documentation</span>\n      </a>\n      <a href=\"https://remixjs.org/docs\" target=\"_blank\" rel=\"noreferrer\" className=\"link\">\n        <span className=\"linkText\">Read Remix documentation</span>\n      </a>\n    </div>\n  </main>\n);\n\nconst Footer = () => (\n  <footer className=\"footer\">\n    <a href=\"https://github.com/clerkinc/clerk-remix-starter\" target=\"_blank\" rel=\"noopener noreferrer\">\n      Powered by <img src=\"/clerk.svg\" alt=\"Clerk.dev\" className=\"footer-logo\" />\n      +\n      <img src=\"/remix.svg\" alt=\"Remix\" className=\"footer-logo-remix\" />\n    </a>\n  </footer>\n);\n\nexport default function Index() {\n  return (\n    <div className=\"container\">\n      <Main />\n      <Footer />\n    </div>\n  );\n}\n", "export default {'version':'34e8f699','entry':{'module':'/build/entry.client-RDIHTFDY.js','imports':['/build/_shared/chunk-YCL25J6Q.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-R3UXG7HE.js','imports':['/build/_shared/chunk-QHJPOAJC.js','/build/_shared/chunk-QUHNQF7W.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-DBWXT3TX.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/sign-in/$':{'id':'routes/sign-in/$','parentId':'root','path':'sign-in/*','index':undefined,'caseSensitive':undefined,'module':'/build/routes/sign-in/$-WLVFMULV.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/sign-up/$':{'id':'routes/sign-up/$','parentId':'root','path':'sign-up/*','index':undefined,'caseSensitive':undefined,'module':'/build/routes/sign-up/$-JPRPOKLK.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/ssr-demo':{'id':'routes/ssr-demo','parentId':'root','path':'ssr-demo','index':undefined,'caseSensitive':undefined,'module':'/build/routes/ssr-demo-GMM2W7QV.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/ssr-user-demo':{'id':'routes/ssr-user-demo','parentId':'root','path':'ssr-user-demo','index':undefined,'caseSensitive':undefined,'module':'/build/routes/ssr-user-demo-7KBBMODN.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/user/$':{'id':'routes/user/$','parentId':'root','path':'user/*','index':undefined,'caseSensitive':undefined,'module':'/build/routes/user/$-NIDLTDO2.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-34E8F699.js'};", "\nimport * as entryServer from \"./entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/ssr-user-demo.tsx\";\nimport * as route2 from \"./routes/sign-in/$.tsx\";\nimport * as route3 from \"./routes/sign-up/$.tsx\";\nimport * as route4 from \"./routes/ssr-demo.tsx\";\nimport * as route5 from \"./routes/user/$.tsx\";\nimport * as route6 from \"./routes/index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/ssr-user-demo\": {\n      id: \"routes/ssr-user-demo\",\n      parentId: \"root\",\n      path: \"ssr-user-demo\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/sign-in/$\": {\n      id: \"routes/sign-in/$\",\n      parentId: \"root\",\n      path: \"sign-in/*\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/sign-up/$\": {\n      id: \"routes/sign-up/$\",\n      parentId: \"root\",\n      path: \"sign-up/*\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/ssr-demo\": {\n      id: \"routes/ssr-demo\",\n      parentId: \"root\",\n      path: \"ssr-demo\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/user/$\": {\n      id: \"routes/user/$\",\n      parentId: \"root\",\n      path: \"user/*\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route6\n    }\n  };"],
  "mappings": "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",
  "names": []
}
